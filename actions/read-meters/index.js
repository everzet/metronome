const core = require("@actions/core");
const github = require("@actions/github");
const toml = require("@iarna/toml");

const readMeters = require("./readMeters");
const commitFile = require("./commitFile");
const isFileContent = require("./isFileContent");

async function main() {
  try {
    // Repository
    const repo = github.context.repo;
    const repoBranch = core.getInput("repo-branch");
    const repoToken = core.getInput("repo-token");

    // Meters & Readings file
    const metersScript = core.getInput("meters-script");
    const readingsPath = core
      .getInput("readings-path")
      .replace("${repo-branch}", repoBranch);

    // Produce readings
    const octokit = github.getOctokit(repoToken);
    const readings = await readMeters(metersScript);
    const readingsToml = `# AUTOGENERATED FILE\n\n${toml.stringify(readings)}`;

    // Commit readings into repo, if changed
    if (isFileContent(readingsPath, readingsToml)) {
      core.info("No change in readings, skipping commit");
    } else {
      const ref = await commitFile(
        octokit.git,
        repo,
        `heads/${repoBranch}`,
        readingsPath,
        readingsToml,
        "Update meter readings"
      );
      core.info(`Committed reading changes to ${readingsPath} via ${ref.sha}`);
    }

    core.setOutput("readings", readings);
  } catch (error) {
    core.setFailed(error);
  }
}

main();
